// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Repository {
  id              String       @id @default(cuid())
  platform        PlatformType
  platformId      String
  size            Int
  stargazersCount Int
  watchersCount   Int
  forksCount      Int
  openIssuesCount Int
  hasIssues       Boolean
  hasProjects     Boolean
  hasWiki         Boolean
  hasPages        Boolean
  archived        Boolean
  disabled        Boolean
  allowForking    Boolean
  isFork          Boolean
  isTemplate      Boolean
  createdAt       DateTime
  updatedAt       DateTime
  pushedAt        DateTime
  extractedAt     DateTime     @default(now())
  recordUpdatedAt DateTime     @updatedAt
  name            String
  description     String?
  readme          String?
  defaultBranch   String
  homePage        String?
  mirrorUrl       String?
  Owner           Owner        @relation(fields: [ownerId], references: [id])
  ownerId         String
  Language        Language?    @relation(fields: [languageId], references: [id])
  languageId      String?
  License         License?     @relation(fields: [licenseId], references: [id])
  licenseId       String?
  Topics          Topic[]
  blockedAt       DateTime?

  @@unique([platform, platformId])
}

model License {
  id           String       @id @default(cuid())
  key          String       @unique
  name         String
  spdxId       String
  Repositories Repository[]
}

model Topic {
  id           String       @id @default(cuid())
  name         String       @unique
  Repositories Repository[]
  createdAt    DateTime     @default(now())
}

model Owner {
  id              String       @id @default(cuid())
  platform        PlatformType
  platformId      String
  login           String       @unique
  gravatarId      String
  type            OwnerType
  siteAdmin       Boolean
  Repositories    Repository[]
  extractedAt     DateTime     @default(now())
  recordUpdatedAt DateTime     @updatedAt
  blockedAt       DateTime?

  @@unique([platform, platformId])
}

model Submission {
  id              String   @id @default(cuid())
  content         String
  hasBeenResolved Boolean  @default(false)
  createdAt       DateTime @default(now())
}

model Report {
  id              String         @id @default(cuid())
  reason          String
  reportableId    String
  reportableType  ReportableType
  hasBeenResolved Boolean        @default(false)
  createdAt       DateTime       @default(now())

}

model Language {
  id           String       @id @default(cuid())
  name         String
  slug         String       @unique
  description  String?
  Repositories Repository[]
}

enum OwnerType {
  User
  Organization
}

enum PlatformType {
  GitHub
  GitLab
  Bitbucket
}

enum ReportableType {
  Owner
  Repository
}
