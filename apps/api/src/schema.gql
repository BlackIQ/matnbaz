# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Owner {
  gravatarId: String!
  id: Float!
  login: String!
  nodeId: String!
  repositories: RepositoryConnection!
  siteAdmin: Boolean!
  type: OwnerType!
}

"""A repository owner could any of these types."""
enum OwnerType {
  """Owner is an organization."""
  Organization

  """Owner is a user."""
  User
}

"""Information about pagination in a connection."""
type PageInfo {
  """The cursor of the last edge in the connection."""
  endCursor: String

  """Indicates if there are more pages to fetch."""
  hasNextPage: Boolean!

  """Indicates if there are any pages prior to the current page."""
  hasPreviousPage: Boolean!

  """The cursor of the first edge in the connection."""
  startCursor: String
}

type Query {
  owner(id: Float!): Owner!
  ownerByLogin(login: String!): Owner!
  repository(id: Float!): Repository!
  topic(name: String!): Topic!
  topicById(id: Float!): Topic!
}

type Repository {
  allowForking: Boolean!
  archived: Boolean!
  createdAt: DateTime!
  defaultBranch: String!
  description: String!
  disabled: Boolean!
  forksCount: Float!
  hasIssues: Boolean!
  hasPages: Boolean!
  hasProjects: Boolean!
  hasWiki: Boolean!
  homePage: String!
  id: Float!
  isFork: Boolean!
  isTemplate: Boolean!
  language: String!
  license: String!
  mirrorUrl: String!
  name: String!
  nodeId: String!
  openIssuesCount: Float!
  owner: Owner!
  ownerId: Float!
  pushedAt: DateTime!
  score: Float!
  size: Float!
  stargazerscount: Float!
  topics: [Topic!]!
  updatedAt: DateTime!
  watchersCount: Float!
}

type RepositoryConnection {
  """A list of edges"""
  edges: [RepositoryEdge!]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

"""A Repository edge."""
type RepositoryEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of RepositoryEdge."""
  node: Repository!
}

type Topic {
  id: Float!
  name: String!
  repositories: RepositoryConnection!
  repositoriesCount: Int!
}
